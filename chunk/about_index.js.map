{"version":3,"sources":["webpack:///./.temp/pages/about/index.scss?cff0","webpack:///./.temp/pages/about/index.scss","webpack:///./.temp/pages/about/index.js"],"names":["content","__webpack_require__","module","i","options","sourceMap","hmr","transform","insertInto","undefined","locals","exports","push","version","sources","names","mappings","file","sourceRoot","_taroH","_components","About","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","arguments","config","navigationBarTitleText","Component","_nervjs2","default","createElement","View","className","_index2","pageType","fixHead","needAdd","ScrollView","style","href"],"mappings":"+EACA,IAAAA,EAAcC,EAAQ,KAEtB,iBAAAD,QAA4CE,EAAAC,EAASH,EAAA,MAOrD,IAAAI,GAAeC,aAAA,EAAAC,OAAA,EAEfC,iBAPAA,EAQAC,kBAAAC,GAEaR,EAAQ,EAARA,CAA8DD,EAAAI,GAE3EJ,EAAAU,SAAAR,EAAAS,QAAAX,EAAAU,gCCjBAR,EAAAS,QAA2BV,EAAQ,EAARA,EAA0D,IAKrFW,MAAcV,EAAAC,EAAS,OAAWU,UAAA,EAAAC,aAAAC,WAAAC,WAAA,GAAAC,OAAA,aAAAC,aAAA,kYCLlCC,EAAAlB,EAAA,4BAEAA,EAAA,IACAmB,EAAAnB,EAAA,6BACAA,EAAA,+EACAA,EAAA,SAOMoB,cACJ,SAAAA,qHAAcC,CAAAC,KAAAF,OAAA,IAAAG,8LAAAC,CAAAF,MAAAF,MAAAK,WAAAC,OAAAC,eAAAP,QAAAQ,MAAAN,KACHO,YADG,OAAAN,EA+BdO,QACEC,yBAAwB,MAhCZR,6VADIS,gEAYhB,OAAOC,EAAAC,QAAAC,cAAChB,EAAAiB,MAAKC,YAAU,YACnBJ,EAAAC,QAAAC,cAACG,EAAAJ,SAAOK,WAAU,KAAMC,WAAS,EAAMC,WAAS,IAChDR,EAAAC,QAAAC,cAAChB,EAAAuB,YAAWL,YAAU,aAAaM,QAAM,gBACvCV,EAAAC,QAAAC,cAAA,kBACAF,EAAAC,QAAAC,cAAA,6DACAF,EAAAC,QAAAC,cAAA,kBACAF,EAAAC,QAAAC,cAAA,UACEF,EAAAC,QAAAC,cAAA,KAAGS,OAAK,sCAAR,uCAGFX,EAAAC,QAAAC,cAAA,kBACAF,EAAAC,QAAAC,cAAA,UACEF,EAAAC,QAAAC,cAAA,KAAGS,OAAK,6CAAR,cAGFX,EAAAC,QAAAC,cAAA,kBACAF,EAAAC,QAAAC,cAAA,2CAQKf","file":"chunk/about_index.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--8-1!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/resolve-url-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-4!./index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--8-1!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/resolve-url-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-4!./index.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--8-1!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/resolve-url-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-4!./index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"index.scss\",\"sourceRoot\":\"\"}]);\n\n// exports\n","import { Component } from \"@tarojs/taro-h5\";\n// import { ComponentClass } from 'react'\nimport Nerv from \"nervjs\";\nimport { View, ScrollView } from '@tarojs/components';\nimport Header from '../../components/header/index';\nimport './index.scss';\n// interface IProps {\n//   props: IProps;\n// }\n// interface IState {\n//   props: IProps;\n// }\nclass About extends Component {\n  constructor() {\n    super(...arguments);\n    /**\n    * 指定config的类型声明为: Taro.Config\n    *\n    * 由于 typescript 对于 object 类型推导只能推出 Key 的基本类型\n    * 对于像 navigationBarTextStyle: 'black' 这样的推导出的类型是 string\n    * 提示和声明 navigationBarTextStyle: 'black' | 'white' 类型冲突, 需要显示声明类型\n    */\n  }\n  render() {\n    return <View className=\"flex-wrp\">\n        <Header pageType={\"关于\"} fixHead={true} needAdd={true}></Header>\n        <ScrollView className=\"about-info\" style=\"height:100vh\">\n          <dt>关于项目</dt>\n          <dd>该项目是基于 https://cnodejs.org 的api，Taro 编写的 多端App。</dd>\n          <dt>源码地址</dt>\n          <dd>\n            <a href=\"https://github.com/icai/taro-cnode\">\n              https://github.com/icai/taro-cnode</a>\n          </dd>\n          <dt>意见反馈</dt>\n          <dd>\n            <a href=\"https://github.com/icai/taro-cnode/issues\">\n              发表意见或者提需求</a>\n          </dd>\n          <dt>当前版本</dt>\n          <dd>V1.0</dd>\n        </ScrollView>\n      </View>;\n  }\n  config = {\n    navigationBarTitleText: '关于'\n  };\n}\nexport default About;"],"sourceRoot":""}