{"version":3,"sources":["webpack:///./.temp/pages/index/index.scss?0a37","webpack:///./.temp/pages/index/index.scss","webpack:///./.temp/assets/images/index.png","webpack:///./.temp/pages/index/index.js"],"names":["content","__webpack_require__","module","i","options","sourceMap","hmr","transform","insertInto","undefined","locals","exports","push","version","sources","names","mappings","file","sourcesContent","sourceRoot","p","_taroH","_components","Index","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","arguments","config","navigationBarTitleText","Component","setTimeout","Taro","navigateTo","url","_nervjs2","default","createElement","View","Image","className","mode","src"],"mappings":"+EACA,IAAAA,EAAcC,EAAQ,KAEtB,iBAAAD,QAA4CE,EAAAC,EAASH,EAAA,MAOrD,IAAAI,GAAeC,aAAA,EAAAC,OAAA,EAEfC,iBAPAA,EAQAC,kBAAAC,GAEaR,EAAQ,EAARA,CAA8DD,EAAAI,GAE3EJ,EAAAU,SAAAR,EAAAS,QAAAX,EAAAU,gCCjBAR,EAAAS,QAA2BV,EAAQ,EAARA,EAA0D,IAKrFW,MAAcV,EAAAC,EAAS,2MAAuM,IAAYU,UAAA,EAAAC,WAAA,mEAAAC,WAAAC,WAAA,kGAA4MC,OAAA,aAAAC,kBAAA,oNAA2PC,aAAA,6BCLjrBjB,EAAAS,QAAiBV,EAAAmB,EAAuB,sZCAxCC,EAAApB,EAAA,wDAGAA,EAAA,IACAqB,EAAArB,EAAA,8EACAA,EAAA,SACMsB,cACJ,SAAAA,qHAAcC,CAAAC,KAAAF,OAAA,IAAAG,8LAAAC,CAAAF,MAAAF,MAAAK,WAAAC,OAAAC,eAAAP,QAAAQ,MAAAN,KACHO,YADG,OAAAN,EAwBdO,QACEC,yBAAwB,MAzBZR,6VADIS,sFAYhBC,WAAW,WACTC,UAAKC,YACHC,MAAK,uBAEN,kHAIH,OAAOC,EAAAC,QAAAC,cAACpB,EAAAqB,KAAD,KACHH,EAAAC,QAAAC,cAACpB,EAAAsB,OAAMC,YAAU,QAAQC,OAAK,WAAWC,MAAK9C,EAAQ,OACtDuC,EAAAC,QAAAC,cAACpB,EAAAqB,MAAKE,YAAU,kBAAhB,2CAOOtB","file":"chunk/index_index.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--8-1!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/resolve-url-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-4!./index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--8-1!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/resolve-url-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-4!./index.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--8-1!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/resolve-url-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-4!./index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".index {\\n  display: block;\\n  background-color: #fff;\\n  margin: 0 auto;\\n  margin-top: 40%;\\n}\\n\\n.index-subtitle {\\n  text-align: center;\\n  margin-top: 0.21333rem;\\n  font-size: 0.68267rem;\\n}\\n\\n\", \"\", {\"version\":3,\"sources\":[\"/home/travis/build/icai/taro-cnode/.temp/pages/index/index.scss\"],\"names\":[],\"mappings\":\"AAAE;EACE,eAAA;EACA,uBAAA;EACA,eAAA;EACA,gBAAA;CACH;;AAEC;EACE,mBAAA;EACA,uBAAA;EACA,sBAAA;CACH\",\"file\":\"index.scss\",\"sourcesContent\":[\"  .index {\\n    display: block;\\n    background-color: #fff;\\n    margin: 0 auto;\\n    margin-top: 40%;\\n  }\\n\\n  .index-subtitle {\\n    text-align: center;\\n    margin-top: 10px;\\n    font-size: 32px;\\n  }\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n","module.exports = __webpack_public_path__ + \"static/images/index.png\";","import Taro from '@tarojs/taro-h5';\nimport { Component } from \"@tarojs/taro-h5\";\n// import { ComponentClass } from 'react'\nimport Nerv from \"nervjs\";\nimport { View, Image } from '@tarojs/components';\nimport './index.scss';\nclass Index extends Component {\n  constructor() {\n    super(...arguments);\n    /**\n    * 指定config的类型声明为: Taro.Config\n    *\n    * 由于 typescript 对于 object 类型推导只能推出 Key 的基本类型\n    * 对于像 navigationBarTextStyle: 'black' 这样的推导出的类型是 string\n    * 提示和声明 navigationBarTextStyle: 'black' | 'white' 类型冲突, 需要显示声明类型\n    */\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      Taro.navigateTo({\n        url: \"/pages/list/index\"\n      });\n    }, 1000);\n  }\n  componentDidHide() {}\n  render() {\n    return <View>\n        <Image className=\"index\" mode=\"widthFix\" src={require(\"../../assets/images/index.png\")} />\n        <View className=\"index-subtitle\">Taro Cnode.js社区</View>\n      </View>;\n  }\n  config = {\n    navigationBarTitleText: '首页'\n  };\n}\nexport default Index;"],"sourceRoot":""}